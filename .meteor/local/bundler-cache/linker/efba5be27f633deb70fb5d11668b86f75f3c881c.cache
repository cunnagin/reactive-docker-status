[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"collections.js\":[\"meteor/mongo\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// lib/collections.js                                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.export({appRecords:function(){return appRecords}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                         //\n// For Docker report data storage in mongodDB                                            //\nvar appRecords = new Mongo.Collection('appRecords');                                     // 4\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"server\":{\"main.js\":[\"meteor/meteor\",\"fibers/future\",\"dockerode\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// server/main.js                                                                        //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});              // 1\n                                                                                         //\nvar Future = require('fibers/future');                                                   // 3\n                                                                                         //\n// Docker API - npm modules                                                              //\nvar Docker = require('dockerode');                                                       // 6\nvar docker = new Docker({ host: 'http://meteor-vm.ldd.rds.lexmark.com', port: '2375' });\n                                                                                         //\nMeteor.startup(function () {                                                             // 9\n                                                                                         //\n  //  WebApp.rawConnectHandlers.use(function(req, res, next){                            //\n  //  \tres.setHeader('Access-Control-Allow-Origin','*')                                  //\n  //  \tnext()                                                                            //\n  //  })                                                                                 //\n                                                                                         //\n});                                                                                      // 16\n                                                                                         //\nMeteor.methods({                                                                         // 18\n                                                                                         //\n  _dockerList: function _dockerList() {                                                  // 20\n    docker.listContainers(Meteor.bindEnvironment(function (err, result) {                // 21\n      return result;                                                                     // 22\n    }));                                                                                 // 23\n    return 'fred';                                                                       // 24\n  }                                                                                      // 25\n                                                                                         //\n});                                                                                      // 18\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/collections.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/collections.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,KAAT,QAAsB,cAAtB;;;AAGA,OAAO,IAAM,aAAa,IAAI,MAAM,UAAV,CAAqB,YAArB,CAAnB,mC;;;;;;;;;;;ACHP,SAAS,MAAT,QAAuB,eAAvB;;AAEA,IAAM,SAAS,QAAQ,eAAR,CAAf;;;AAGA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,SAAS,IAAI,MAAJ,CAAW,EAAC,MAAM,sCAAP,EAA+C,MAAM,MAArD,EAAX,CAAb;;AAEA,OAAO,OAAP,CAAe,YAAM;;;;;;;AAOpB,CAPD;;AASA,OAAO,OAAP,CAAe;;AAEd,eAAa,uBAAU;AACtB,WAAO,cAAP,CAAsB,OAAO,eAAP,CAAuB,UAAS,GAAT,EAAa,MAAb,EAAoB;AAC9D,aAAO,MAAP;AACA,KAFmB,CAAtB;AAGE,WAAO,MAAP;AACF;;AAPa,CAAf,6F","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\n\r\n// For Docker report data storage in mongodDB\r\nexport const appRecords = new Mongo.Collection('appRecords');","import { Meteor } from 'meteor/meteor'\n\nconst Future = require('fibers/future')\n\n// Docker API - npm modules\nvar Docker = require('dockerode')\nvar docker = new Docker({host: 'http://meteor-vm.ldd.rds.lexmark.com', port: '2375' })\n\nMeteor.startup(() => {\n  \n//  WebApp.rawConnectHandlers.use(function(req, res, next){\n//  \tres.setHeader('Access-Control-Allow-Origin','*')\n//  \tnext()\n//  })\n\n});\n\nMeteor.methods({\n\n\t_dockerList: function(){\n\t\tdocker.listContainers(Meteor.bindEnvironment(function(err,result){\n  \t\t\treturn result\n  \t\t}))\n  \t\treturn 'fred'\n\t}\n\n})\n\n"]}}]