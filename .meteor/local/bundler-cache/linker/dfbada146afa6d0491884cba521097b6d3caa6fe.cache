[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":[\"./template.main.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// client/main.html                                                                 //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nmodule.exports = require(\"./template.main.js\");                                     // 1\n                                                                                    // 2\n//////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// client/template.main.js                                                          //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n                                                                                    // 1\nTemplate.body.addContent((function() {                                              // 2\n  var view = this;                                                                  // 3\n  return [ HTML.Raw(\"<h1>Reactive Docker Status for Meteor</h1>\\n  \"), Spacebars.include(view.lookupTemplate(\"status\")) ];\n}));                                                                                // 5\nMeteor.startup(Template.body.renderToDocument);                                     // 6\n                                                                                    // 7\nTemplate.__checkName(\"status\");                                                     // 8\nTemplate[\"status\"] = new Template(\"Template.status\", (function() {                  // 9\n  var view = this;                                                                  // 10\n  return [ HTML.Raw(\"<h2>Docker Containers</h2>\\n  \"), Blaze.Each(function() {      // 11\n    return {                                                                        // 12\n      _sequence: Spacebars.call(view.lookup(\"dockerList\")),                         // 13\n      _variable: \"container\"                                                        // 14\n    };                                                                              // 15\n  }, function() {                                                                   // 16\n    return [ \"\\n    \", HTML.H3(\"record #\", Blaze.View(\"lookup:@index\", function() {\n      return Spacebars.mustache(view.lookup(\"@index\"));                             // 18\n    })), \"\\n    \", HTML.H4(Blaze.View(\"lookup:print\", function() {                  // 19\n      return Spacebars.mustache(view.lookup(\"print\"), view.lookup(\"container\"));    // 20\n    })), \"\\n  \" ];                                                                  // 21\n  }) ];                                                                             // 22\n}));                                                                                // 23\n                                                                                    // 24\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",\"meteor/templating\",\"../imports/collections.js\",\"./main.html\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// client/main.js                                                                   //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});var dockerStatus;module.import('../imports/collections.js',{\"dockerStatus\":function(v){dockerStatus=v}});module.import('./main.html');// package: npm\n// end: client                                                                      //\n// name: reactive-docker-status                                                     //\n// author: stephen cunnagin                                                         //\n// info: provides a reactive status for docker to a meteor application              //\n                                                                                    //\n                                                                                    // 7\n                                                                                    // 8\n                                                                                    // 9\n                                                                                    // 10\n                                                                                    //\nMeteor.startup(function () {                                                        // 12\n                                                                                    //\n  Template.body.onCreated(function () {                                             // 14\n    Meteor.subscribe('dockerStatus');                                               // 15\n  });                                                                               // 16\n                                                                                    //\n  Template.status.helpers({                                                         // 18\n    dockerList: function () {                                                       // 20\n      function dockerList() {                                                       // 18\n        var result = dockerStatus.findOne({ name: 'dockerList' });                  // 21\n        return result.data;                                                         // 22\n      }                                                                             // 23\n                                                                                    //\n      return dockerList;                                                            // 18\n    }(),                                                                            // 18\n    print: function () {                                                            // 25\n      function print(container) {                                                   // 18\n        return JSON.stringify(container);                                           // 26\n      }                                                                             // 27\n                                                                                    //\n      return print;                                                                 // 18\n    }()                                                                             // 18\n  });                                                                               // 18\n});                                                                                 // 31\n//////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"collections.js\":[\"meteor/mongo\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/collections.js                                                           //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nmodule.export({dockerStatus:function(){return dockerStatus}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                    //\n// For Docker report data storage in mongodDB                                       //\nvar dockerStatus = new Mongo.Collection('dockerStatus');                            // 4\n//////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.html","/client/template.main.js","/client/main.js","/imports/collections.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA,wF;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yF;;;;;;;;;;;;;;;;;ACjBA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,YAAT,QAA6B,2BAA7B;AACA,OAAO,aAAP;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEnB,WAAS,IAAT,CAAc,SAAd,CAAwB,YAAU;AAC9B,WAAO,SAAP,CAAiB,cAAjB;AACH,GAFD;;AAIA,WAAS,MAAT,CAAgB,OAAhB,CAAwB;AAEtB,cAFsB;AAAA,4BAEV;AACX,YAAI,SAAS,aAAa,OAAb,CAAqB,EAAC,MAAM,YAAP,EAArB,CAAb;AACA,eAAO,OAAO,IAAd;AACA;;AALqB;AAAA;AAOtB,SAPsB;AAAA,qBAOhB,SAPgB,EAON;AACf,eAAO,KAAK,SAAL,CAAe,SAAf,CAAP;AACA;;AATqB;AAAA;AAAA,GAAxB;AAaD,CAnBD,wF;;;;;;;;;;;ACXA,SAAS,KAAT,QAAsB,cAAtB;;;AAGA,OAAO,IAAM,eAAe,IAAI,MAAM,UAAV,CAAqB,cAArB,CAArB,0B","file":"/app.js","sourcesContent":["module.exports = require(\"./template.main.js\");\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw(\"<h1>Reactive Docker Status for Meteor</h1>\\n  \"), Spacebars.include(view.lookupTemplate(\"status\")) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"status\");\nTemplate[\"status\"] = new Template(\"Template.status\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h2>Docker Containers</h2>\\n  \"), Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"dockerList\")),\n      _variable: \"container\"\n    };\n  }, function() {\n    return [ \"\\n    \", HTML.H3(\"record #\", Blaze.View(\"lookup:@index\", function() {\n      return Spacebars.mustache(view.lookup(\"@index\"));\n    })), \"\\n    \", HTML.H4(Blaze.View(\"lookup:print\", function() {\n      return Spacebars.mustache(view.lookup(\"print\"), view.lookup(\"container\"));\n    })), \"\\n  \" ];\n  }) ];\n}));\n","// package: npm\n// end: client\n// name: reactive-docker-status\n// author: stephen cunnagin\n// info: provides a reactive status for docker to a meteor application\n\nimport { Meteor } from 'meteor/meteor'\nimport { Template } from 'meteor/templating'\nimport { dockerStatus } from '../imports/collections.js'\nimport './main.html'\n\nMeteor.startup(() => {\n\n  Template.body.onCreated(function(){\n      Meteor.subscribe('dockerStatus')\n  })\n\n  Template.status.helpers({\n\n    dockerList(){\n    \tvar result = dockerStatus.findOne({name: 'dockerList'})\n   \t\treturn result.data\n    },\n\n    print(container){\n    \treturn JSON.stringify(container)\n    }\n\n  })\n\n})","import { Mongo } from 'meteor/mongo'\r\n\r\n// For Docker report data storage in mongodDB\r\nexport const dockerStatus = new Mongo.Collection('dockerStatus')"]}}]