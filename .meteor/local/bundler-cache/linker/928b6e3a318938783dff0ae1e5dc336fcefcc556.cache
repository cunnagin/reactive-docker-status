[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// packages/cunnagin_reactive-docker-status/reactive-docker-status.js  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// package: npm\n// end: client\n// name: reactive-docker-status\n// author: stephen cunnagin\n// info: provides a reactive status for docker to a meteor application\n\nimport { Meteor } from 'meteor/meteor'\nimport { Template } from 'meteor/templating'\nimport { dockerStatus } from '../imports/collections.js'\nimport './main.html'\n\nTemplate.body.onCreated(function(){\n    Meteor.subscribe('dockerStatus')\n})\n\nTemplate.registerHelper('dockerContainers', ()=> {\n\tvar result = dockerStatus.findOne({name: 'dockerList'})\n    result = ((result===undefined)?null:result.data)\n    return result\n})\n\nTemplate.registerHelper('dockerPrint', ()=> {\n\treturn JSON.stringify(container)\n})\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// packages/cunnagin_reactive-docker-status/imports/collections.js     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nimport { Mongo } from 'meteor/mongo'\n\n// For Docker report data storage in mongodDB\nexport const dockerStatus = new Mongo.Collection('dockerStatus')\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cunnagin:reactive-docker-status'] = {};\n\n})();\n","servePath":"/packages/cunnagin_reactive-docker-status.js","sourceMap":{"version":3,"sources":["/packages/cunnagin_reactive-docker-status/reactive-docker-status.js","/packages/cunnagin_reactive-docker-status/imports/collections.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA,gE","file":"/packages/cunnagin_reactive-docker-status.js","sourcesContent":["// package: npm\n// end: client\n// name: reactive-docker-status\n// author: stephen cunnagin\n// info: provides a reactive status for docker to a meteor application\n\nimport { Meteor } from 'meteor/meteor'\nimport { Template } from 'meteor/templating'\nimport { dockerStatus } from '../imports/collections.js'\nimport './main.html'\n\nTemplate.body.onCreated(function(){\n    Meteor.subscribe('dockerStatus')\n})\n\nTemplate.registerHelper('dockerContainers', ()=> {\n\tvar result = dockerStatus.findOne({name: 'dockerList'})\n    result = ((result===undefined)?null:result.data)\n    return result\n})\n\nTemplate.registerHelper('dockerPrint', ()=> {\n\treturn JSON.stringify(container)\n})","import { Mongo } from 'meteor/mongo'\n\n// For Docker report data storage in mongodDB\nexport const dockerStatus = new Mongo.Collection('dockerStatus')"]}}]