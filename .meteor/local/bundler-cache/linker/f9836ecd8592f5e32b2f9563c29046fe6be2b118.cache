[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"main.js\":[\"meteor/meteor\",\"dockerode\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// server/main.js                                                                        //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});              // 1\n//import { WebApp } from 'meteor/webapp'                                                 //\n                                                                                         //\n// Docker API - npm modules                                                              //\nvar Docker = require('dockerode');                                                       // 5\nvar docker = new Docker({ host: 'http://meteor-vm.ldd.rds.lexmark.com', port: '2375' });\n                                                                                         //\nMeteor.startup(function () {                                                             // 8\n                                                                                         //\n  //  WebApp.rawConnectHandlers.use(function(req, res, next){                            //\n  //  \tres.setHeader('Access-Control-Allow-Origin','*')                                  //\n  //  \tnext()                                                                            //\n  //  })                                                                                 //\n                                                                                         //\n});                                                                                      // 15\n                                                                                         //\nMeteor.methods({                                                                         // 17\n                                                                                         //\n  docker_list: function docker_list() {                                                  // 19\n    this_unblock();                                                                      // 20\n    docker.listContainers(Meteor.bindEnvironment(function (err, containers) {            // 21\n      console.log(containers);                                                           // 22\n      return containers;                                                                 // 23\n    }));                                                                                 // 24\n  }                                                                                      // 25\n                                                                                         //\n});                                                                                      // 17\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,MAAT,QAAuB,eAAvB;;;;AAIA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,SAAS,IAAI,MAAJ,CAAW,EAAC,MAAM,sCAAP,EAA+C,MAAM,MAArD,EAAX,CAAb;;AAEA,OAAO,OAAP,CAAe,YAAM;;;;;;;AAOpB,CAPD;;AASA,OAAO,OAAP,CAAe;;AAEd,eAAa,uBAAU;AACtB;AACA,WAAO,cAAP,CAAsB,OAAO,eAAP,CAAuB,UAAS,GAAT,EAAa,UAAb,EAAwB;AAClE,cAAQ,GAAR,CAAY,UAAZ;AACA,aAAO,UAAP;AACA,KAHmB,CAAtB;AAIA;;AARa,CAAf,6F","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor'\n//import { WebApp } from 'meteor/webapp'\n\n// Docker API - npm modules\nvar Docker = require('dockerode')\nvar docker = new Docker({host: 'http://meteor-vm.ldd.rds.lexmark.com', port: '2375' })\n\nMeteor.startup(() => {\n  \n//  WebApp.rawConnectHandlers.use(function(req, res, next){\n//  \tres.setHeader('Access-Control-Allow-Origin','*')\n//  \tnext()\n//  })\n\n});\n\nMeteor.methods({\n\n\tdocker_list: function(){\n\t\tthis_unblock()\n\t\tdocker.listContainers(Meteor.bindEnvironment(function(err,containers){\n  \t\t\tconsole.log(containers)\n  \t\t\treturn containers\n  \t\t}))\n\t}\n\n})\n\n"]}}]