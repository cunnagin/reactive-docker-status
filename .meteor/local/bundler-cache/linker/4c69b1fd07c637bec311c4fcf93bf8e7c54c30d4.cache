[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar Template = Package.templating.Template;\nvar WebApp = Package.webapp.WebApp;\nvar _ = Package.underscore._;\nvar DDP = Package['ddp-client'].DDP;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar Autoupdate = Package.autoupdate.Autoupdate;\nvar Reload = Package.reload.Reload;\nvar HTML = Package.htmljs.HTML;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cunnagin:reactive-docker-status\":{\"client\":{\"reactive-docker-status.js\":[\"meteor/meteor\",\"meteor/templating\",\"../imports/collections.js\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/cunnagin_reactive-docker-status/client/reactive-docker-status.js                    //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nvar _meteor = require('meteor/meteor');                                                         // 7\n                                                                                                //\nvar _templating = require('meteor/templating');                                                 // 8\n                                                                                                //\nvar _collections = require('../imports/collections.js');                                        // 9\n                                                                                                //\n_templating.Template.body.onCreated(function () {                                               // 11\n  _meteor.Meteor.subscribe('dockerStatus');                                                     // 12\n}); // package: npm                                                                             // 13\n// end: client                                                                                  //\n// name: reactive-docker-status                                                                 //\n// author: stephen cunnagin                                                                     //\n// info: provides a reactive status for docker to a meteor application                          //\n                                                                                                //\n_templating.Template.registerHelper('dockerContainers', function () {                           // 15\n  var result = _collections.dockerStatus.findOne({ name: 'dockerList' });                       // 16\n  result = result === undefined ? null : result.data;                                           // 17\n  return result;                                                                                // 18\n});                                                                                             // 19\n                                                                                                //\n_templating.Template.registerHelper('dockerPrint', function (container) {                       // 21\n  return JSON.stringify(container);                                                             // 22\n});                                                                                             // 23\n                                                                                                //\n_meteor.Meteor.call('dockerStatusCreate', 'http://meteor-vm.ldd.rds.lexmark.com', function () {\n  console.log('Created New Docker Status Object on Server');                                    // 26\n});                                                                                             // 27\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"collections.js\":[\"meteor/mongo\",function(require,exports){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/cunnagin_reactive-docker-status/imports/collections.js                              //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nexports.__esModule = true;                                                                      //\nexports.dockerStatus = undefined;                                                               //\n                                                                                                //\nvar _mongo = require('meteor/mongo');                                                           // 1\n                                                                                                //\n// For Docker report data storage in mongodDB                                                   //\nvar dockerStatus = exports.dockerStatus = new _mongo.Mongo.Collection('dockerStatus');          // 4\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/cunnagin:reactive-docker-status/client/reactive-docker-status.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cunnagin:reactive-docker-status'] = {};\n\n})();\n","servePath":"/packages/cunnagin_reactive-docker-status.js","sourceMap":{"version":3,"sources":["/packages/cunnagin:reactive-docker-status/client/reactive-docker-status.js","/packages/cunnagin:reactive-docker-status/imports/collections.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;AACA;;AAEA,qBAAS,IAAT,CAAc,SAAd,CAAwB,YAAU;AAC9B,iBAAO,SAAP,CAAiB,cAAjB;AACH,CAFD,E;;;;;;AAIA,qBAAS,cAAT,CAAwB,kBAAxB,EAA4C,YAAK;AAChD,MAAI,SAAS,0BAAa,OAAb,CAAqB,EAAC,MAAM,YAAP,EAArB,CAAb;AACG,WAAW,WAAS,SAAV,GAAqB,IAArB,GAA0B,OAAO,IAA3C;AACA,SAAO,MAAP;AACH,CAJD;;AAMA,qBAAS,cAAT,CAAwB,aAAxB,EAAuC,UAAC,SAAD,EAAc;AACpD,SAAO,KAAK,SAAL,CAAe,SAAf,CAAP;AACA,CAFD;;AAIA,eAAO,IAAP,CAAY,oBAAZ,EAAkC,sCAAlC,EAA0E,YAAU;AACnF,UAAQ,GAAR,CAAY,4CAAZ;AACA,CAFD,oG;;;;;;;;;;;;;;ACxBA;;;AAGO,IAAM,sCAAe,IAAI,aAAM,UAAV,CAAqB,cAArB,CAArB,e","file":"/packages/cunnagin_reactive-docker-status.js","sourcesContent":["// package: npm\n// end: client\n// name: reactive-docker-status\n// author: stephen cunnagin\n// info: provides a reactive status for docker to a meteor application\n\nimport { Meteor } from 'meteor/meteor'\nimport { Template } from 'meteor/templating'\nimport { dockerStatus } from '../imports/collections.js'\n\nTemplate.body.onCreated(function(){\n    Meteor.subscribe('dockerStatus')\n})\n\nTemplate.registerHelper('dockerContainers', ()=> {\n\tvar result = dockerStatus.findOne({name: 'dockerList'})\n    result = ((result===undefined)?null:result.data)\n    return result\n})\n\nTemplate.registerHelper('dockerPrint', (container)=> {\n\treturn JSON.stringify(container)\n})\n\nMeteor.call('dockerStatusCreate', 'http://meteor-vm.ldd.rds.lexmark.com', function(){\n\tconsole.log('Created New Docker Status Object on Server')\n})","import { Mongo } from 'meteor/mongo'\r\n\r\n// For Docker report data storage in mongodDB\r\nexport const dockerStatus = new Mongo.Collection('dockerStatus')"]}}]