[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"collections.js\":[\"meteor/mongo\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// imports/collections.js                                                                        //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\nmodule.export({dockerStatus:function(){return dockerStatus}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                                 //\n// For Docker report data storage in mongodDB                                                    //\nvar dockerStatus = new Mongo.Collection('dockerStatus');                                         // 4\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"server\":{\"main.js\":[\"babel-runtime/helpers/classCallCheck\",\"meteor/meteor\",\"../imports/collections.js\",\"dockerode\",\"docker-events\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// server/main.js                                                                                //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var dockerStatus;module.import('../imports/collections.js',{\"dockerStatus\":function(v){dockerStatus=v}});var Docker;module.import('dockerode',{\"default\":function(v){Docker=v}});var DockerEvents;module.import('docker-events',{\"default\":function(v){DockerEvents=v}});\n// package: npm                                                                                  //\n// end: server                                                                                   //\n// name: reactive-docker-status                                                                  //\n// author: stephen cunnagin                                                                      //\n// info: provides a reactive status for docker to a meteor application                           //\n                                                                                                 //\n                                                                                                 // 7\n                                                                                                 // 8\n                                                                                                 // 9\n                                                                                                 // 10\n                                                                                                 //\nMeteor.startup(function () {                                                                     // 12\n\tvar reactiveDockerStatus =                                                                      // 12\n\t// this class object is used for each docker instance to monitor updates                        //\n\t// highly leveraging the great npm packages 'dockerode' & 'docker-events'                       //\n\tfunction reactiveDockerStatus(argHostname, argPort, argCollectionName) {                        // 17\n\t\t_classCallCheck(this, reactiveDockerStatus);                                                   // 17\n                                                                                                 //\n\t\tthis.docker = new Docker({ host: argHostname, port: argPort });                                // 18\n\t\tthis.emitter = new DockerEvents({ docker: docker });                                           // 19\n\t\treturn this;                                                                                   // 20\n\t};                                                                                              // 21\n                                                                                                 //\n\trds = new reactiveDockerStatus('http://meteor-vm.ldd.rds.lexmark.com', '2375', 'dockerStatus');\n});                                                                                              // 26\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/collections.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,KAAT,QAAsB,cAAtB;;;AAGA,OAAO,IAAM,eAAe,IAAI,MAAM,UAAV,CAAqB,cAArB,CAArB,uC;;;;;;;;;;;;;;;;;;ACGP,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,YAAT,QAA6B,2BAA7B;AACA,OAAO,MAAP,MAAmB,WAAnB;AACA,OAAO,YAAP,MAAyB,eAAzB;;AAEA,OAAO,OAAP,CAAe,YAAM;AAAA,KAEd,oBAFc;;;AAKnB,+BAAY,WAAZ,EAAyB,OAAzB,EAAkC,iBAAlC,EAAoD;AAAA;;AACnD,OAAK,MAAL,GAAc,IAAI,MAAJ,CAAW,EAAC,MAAM,WAAP,EAAoB,MAAM,OAA1B,EAAX,CAAd;AACA,OAAK,OAAL,GAAe,IAAI,YAAJ,CAAiB,EAAC,QAAQ,MAAT,EAAjB,CAAf;AACA,SAAO,IAAP;AACA,EATkB;;AAYpB,OAAM,IAAI,oBAAJ,CAAyB,sCAAzB,EAAiE,MAAjE,EAAyE,cAAzE,CAAN;AAEA,CAdD,qG","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo'\r\n\r\n// For Docker report data storage in mongodDB\r\nexport const dockerStatus = new Mongo.Collection('dockerStatus')","// package: npm\n// end: server\n// name: reactive-docker-status\n// author: stephen cunnagin\n// info: provides a reactive status for docker to a meteor application\n\nimport { Meteor } from 'meteor/meteor'\nimport { dockerStatus } from '../imports/collections.js'\nimport Docker from 'dockerode'\nimport DockerEvents from 'docker-events' \n\nMeteor.startup(() => {\n\n\tclass reactiveDockerStatus {\n\t\t// this class object is used for each docker instance to monitor updates\n\t\t// highly leveraging the great npm packages 'dockerode' & 'docker-events'\n\t\tconstructor(argHostname, argPort, argCollectionName){\n\t\t\tthis.docker = new Docker({host: argHostname, port: argPort })\n\t\t\tthis.emitter = new DockerEvents({docker: docker})\n\t\t\treturn this\n\t\t}\n\t}\n\n\trds = new reactiveDockerStatus('http://meteor-vm.ldd.rds.lexmark.com', '2375', 'dockerStatus')\n\n})\n\n"]}}]