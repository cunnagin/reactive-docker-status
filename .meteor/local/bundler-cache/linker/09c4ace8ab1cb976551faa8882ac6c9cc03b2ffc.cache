[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// packages/cunnagin_reactive-docker-status/reactive-docker-status.js  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n// package: npm                                                        // 1\n// end: client                                                         // 2\n// name: reactive-docker-status                                        // 3\n// author: stephen cunnagin                                            // 4\n// info: provides a reactive status for docker to a meteor application\n                                                                       // 6\nimport { Meteor } from 'meteor/meteor'                                 // 7\nimport { Template } from 'meteor/templating'                           // 8\nimport { dockerStatus } from '../imports/collections.js'               // 9\nimport './main.html'                                                   // 10\n                                                                       // 11\nTemplate.body.onCreated(function(){                                    // 12\n    Meteor.subscribe('dockerStatus')                                   // 13\n})                                                                     // 14\n                                                                       // 15\nTemplate.registerHelper('dockerContainers', ()=> {                     // 16\n\tvar result = dockerStatus.findOne({name: 'dockerList'})               // 17\n    result = ((result===undefined)?null:result.data)                   // 18\n    return result                                                      // 19\n})                                                                     // 20\n                                                                       // 21\nTemplate.registerHelper('dockerPrint', ()=> {                          // 22\n\treturn JSON.stringify(container)                                      // 23\n})                                                                     // 24\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// packages/cunnagin_reactive-docker-status/imports/collections.js     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nimport { Mongo } from 'meteor/mongo'                                   // 1\n                                                                       // 2\n// For Docker report data storage in mongodDB                          // 3\nexport const dockerStatus = new Mongo.Collection('dockerStatus')       // 4\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cunnagin:reactive-docker-status'] = {};\n\n})();\n","servePath":"/packages/cunnagin_reactive-docker-status.js","sourceMap":{"version":3,"sources":["/packages/cunnagin_reactive-docker-status/reactive-docker-status.js","/packages/cunnagin_reactive-docker-status/imports/collections.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA,2E","file":"/packages/cunnagin_reactive-docker-status.js","sourcesContent":["// package: npm\n// end: client\n// name: reactive-docker-status\n// author: stephen cunnagin\n// info: provides a reactive status for docker to a meteor application\n\nimport { Meteor } from 'meteor/meteor'\nimport { Template } from 'meteor/templating'\nimport { dockerStatus } from '../imports/collections.js'\nimport './main.html'\n\nTemplate.body.onCreated(function(){\n    Meteor.subscribe('dockerStatus')\n})\n\nTemplate.registerHelper('dockerContainers', ()=> {\n\tvar result = dockerStatus.findOne({name: 'dockerList'})\n    result = ((result===undefined)?null:result.data)\n    return result\n})\n\nTemplate.registerHelper('dockerPrint', ()=> {\n\treturn JSON.stringify(container)\n})","import { Mongo } from 'meteor/mongo'\n\n// For Docker report data storage in mongodDB\nexport const dockerStatus = new Mongo.Collection('dockerStatus')"]}}]